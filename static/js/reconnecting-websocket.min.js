!function(global,factory){"function"==typeof define&&define.amd?define([],factory):"undefined"!=typeof module&&module.exports?module.exports=factory():global.ReconnectingWebSocket=factory()}(this,(function(){if("WebSocket"in window)return ReconnectingWebSocket.prototype.onopen=function(event){},ReconnectingWebSocket.prototype.onclose=function(event){},ReconnectingWebSocket.prototype.onconnecting=function(event){},ReconnectingWebSocket.prototype.onmessage=function(event){},ReconnectingWebSocket.prototype.onerror=function(event){},ReconnectingWebSocket.debugAll=!1,ReconnectingWebSocket.CONNECTING=WebSocket.CONNECTING,ReconnectingWebSocket.OPEN=WebSocket.OPEN,ReconnectingWebSocket.CLOSING=WebSocket.CLOSING,ReconnectingWebSocket.CLOSED=WebSocket.CLOSED,ReconnectingWebSocket;function ReconnectingWebSocket(url,protocols,options){var settings={debug:!1,automaticOpen:!0,reconnectInterval:1e3,maxReconnectInterval:3e4,reconnectDecay:1.5,timeoutInterval:2e3,maxReconnectAttempts:null,binaryType:"blob"};for(var key in options||(options={}),settings)void 0!==options[key]?this[key]=options[key]:this[key]=settings[key];this.url=url,this.reconnectAttempts=0,this.readyState=WebSocket.CONNECTING,this.protocol=null;var self=this,ws,forcedClose=!1,timedOut=!1,eventTarget=document.createElement("div");function generateEvent(s,args){var evt=document.createEvent("CustomEvent");return evt.initCustomEvent(s,!1,!1,args),evt}eventTarget.addEventListener("open",(function(event){self.onopen(event)})),eventTarget.addEventListener("close",(function(event){self.onclose(event)})),eventTarget.addEventListener("connecting",(function(event){self.onconnecting(event)})),eventTarget.addEventListener("message",(function(event){self.onmessage(event)})),eventTarget.addEventListener("error",(function(event){self.onerror(event)})),this.addEventListener=eventTarget.addEventListener.bind(eventTarget),this.removeEventListener=eventTarget.removeEventListener.bind(eventTarget),this.dispatchEvent=eventTarget.dispatchEvent.bind(eventTarget),this.open=function(reconnectAttempt){if((ws=new WebSocket(self.url,protocols||[])).binaryType=this.binaryType,reconnectAttempt){if(this.maxReconnectAttempts&&this.reconnectAttempts>this.maxReconnectAttempts)return}else eventTarget.dispatchEvent(generateEvent("connecting")),this.reconnectAttempts=0;(self.debug||ReconnectingWebSocket.debugAll)&&console.debug("ReconnectingWebSocket","attempt-connect",self.url);var localWs=ws,timeout=setTimeout((function(){(self.debug||ReconnectingWebSocket.debugAll)&&console.debug("ReconnectingWebSocket","connection-timeout",self.url),timedOut=!0,localWs.close(),timedOut=!1}),self.timeoutInterval);ws.onopen=function(event){clearTimeout(timeout),(self.debug||ReconnectingWebSocket.debugAll)&&console.debug("ReconnectingWebSocket","onopen",self.url),self.protocol=ws.protocol,self.readyState=WebSocket.OPEN,self.reconnectAttempts=0;var e=generateEvent("open");e.isReconnect=reconnectAttempt,reconnectAttempt=!1,eventTarget.dispatchEvent(e)},ws.onclose=function(event){if(clearTimeout(timeout),ws=null,forcedClose)self.readyState=WebSocket.CLOSED,eventTarget.dispatchEvent(generateEvent("close"));else{self.readyState=WebSocket.CONNECTING;var e=generateEvent("connecting");e.code=event.code,e.reason=event.reason,e.wasClean=event.wasClean,eventTarget.dispatchEvent(e),reconnectAttempt||timedOut||((self.debug||ReconnectingWebSocket.debugAll)&&console.debug("ReconnectingWebSocket","onclose",self.url),eventTarget.dispatchEvent(generateEvent("close")));var timeout=self.reconnectInterval*Math.pow(self.reconnectDecay,self.reconnectAttempts);setTimeout((function(){self.reconnectAttempts++,self.open(!0)}),timeout>self.maxReconnectInterval?self.maxReconnectInterval:timeout)}},ws.onmessage=function(event){(self.debug||ReconnectingWebSocket.debugAll)&&console.debug("ReconnectingWebSocket","onmessage",self.url,event.data);var e=generateEvent("message");e.data=event.data,eventTarget.dispatchEvent(e)},ws.onerror=function(event){(self.debug||ReconnectingWebSocket.debugAll)&&console.debug("ReconnectingWebSocket","onerror",self.url,event),eventTarget.dispatchEvent(generateEvent("error"))}},1==this.automaticOpen&&this.open(!1),this.send=function(data){if(!ws)throw"INVALID_STATE_ERR : Pausing to reconnect websocket";(self.debug||ReconnectingWebSocket.debugAll)&&console.debug("ReconnectingWebSocket","send",self.url,data);try{return ws.send(data)}catch{}},this.close=function(code,reason){void 0===code&&(code=1e3),forcedClose=!0,ws&&ws.close(code,reason)},this.refresh=function(){ws&&ws.close()}}}));